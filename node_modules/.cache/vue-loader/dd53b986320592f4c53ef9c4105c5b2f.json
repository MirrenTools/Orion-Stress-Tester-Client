{"remainingRequest":"D:\\project\\vue\\WebSocket-Stress-Tester-Client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\project\\vue\\WebSocket-Stress-Tester-Client\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\project\\vue\\WebSocket-Stress-Tester-Client\\src\\App.vue","mtime":1581298642916},{"path":"D:\\project\\vue\\WebSocket-Stress-Tester-Client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1580976810633},{"path":"D:\\project\\vue\\WebSocket-Stress-Tester-Client\\node_modules\\babel-loader\\lib\\index.js","mtime":1580976845122},{"path":"D:\\project\\vue\\WebSocket-Stress-Tester-Client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1580976810633},{"path":"D:\\project\\vue\\WebSocket-Stress-Tester-Client\\node_modules\\vue-loader\\lib\\index.js","mtime":1580976838260}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport ChartLine from './components/EchartsLive.vue';\r\nexport default {\r\n\tname: 'Orion-Stress-Tester',\r\n\tcomponents: { ChartLine },\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\t// 是否显示请求统计信息\r\n\t\t\tisStatistics: false,\r\n\t\t\t//请求统计的信息\r\n\t\t\tstatisticsInfo: '',\r\n\t\t\t//是否正在执行中\r\n\t\t\tisExecuting: false,\r\n\t\t\t//是否已经执行过\r\n\t\t\tisExecuted: true,\r\n\t\t\t//请求的数据\r\n\t\t\trequestData: {\r\n\t\t\t\t//请求的类型\r\n\t\t\t\trequestType: 'HTTP',\r\n\t\t\t\t//是否使用SSL\r\n\t\t\t\tisSSL: false,\r\n\t\t\t\t//证书的类型\r\n\t\t\t\tcert: 'DEFAULT',\r\n\t\t\t\t//证书的key\r\n\t\t\t\tcertKey: '',\r\n\t\t\t\t//证书的value\r\n\t\t\t\tcertValue: '',\r\n\t\t\t\t//http请求的类型\r\n\t\t\t\tmethod: 'GET',\r\n\t\t\t\t//请求的header数据\r\n\t\t\t\theaders: [],\r\n\t\t\t\t//请求的url\r\n\t\t\t\turl: '',\r\n\t\t\t\t//请求的body\r\n\t\t\t\tbody: '',\r\n\t\t\t\t//请求的总次数\r\n\t\t\t\tcount: null,\r\n\t\t\t\t//每次请求多数次\r\n\t\t\t\taverage: null,\r\n\t\t\t\t//请求的间隔\r\n\t\t\t\tinterval: null\r\n\t\t\t},\r\n\t\t\t//请求数据长度\r\n\t\t\trequestDataLen: 0,\r\n\t\t\t//请求响应数据长度\r\n\t\t\tresponseDataLen: 0,\r\n\r\n\t\t\t//请求成功的数量\r\n\t\t\tresponseSucceeded: 0,\r\n\t\t\t//请求成功的时间平均值\r\n\t\t\tresponseSucceededTimeSum: 0,\r\n\t\t\t//请求成功最小用时\r\n\t\t\tresponseSucceededMin: 0,\r\n\t\t\t//请求成功最大用时\r\n\t\t\tresponseSucceededMax: 0,\r\n\r\n\t\t\t//请求失败的数量\r\n\t\t\tresponseFailed: 0,\r\n\t\t\t//请求失败,响应以4开头的状态码数量\r\n\t\t\tresponseFailed4xx: 0,\r\n\t\t\t//请求失败,响应以5开头的状态码数量\r\n\t\t\tresponseFailed5xx: 0,\r\n\t\t\t//请求失败的时间平均值\r\n\t\t\tresponseFailedTimeSum: 0,\r\n\t\t\t//请求失败最小用时\r\n\t\t\tresponseFailedMin: 0,\r\n\t\t\t//请求失败最大用时\r\n\t\t\tresponseFailedMax: 0,\r\n\r\n\t\t\t//不同批次的请求统计信息,该数据在执行之前先按count次数添加数组\r\n\t\t\tresponseStatistics: [\r\n\t\t\t\t{\r\n\t\t\t\t\t//成功的数量\r\n\t\t\t\t\tsucceeded: 0,\r\n\t\t\t\t\t//失败的数量\r\n\t\t\t\t\tfailed: 0,\r\n\t\t\t\t\t//2xx状态码数量\r\n\t\t\t\t\tx2: 0,\r\n\t\t\t\t\t//400状态码数量\r\n\t\t\t\t\tx4: 0,\r\n\t\t\t\t\t//5xx状态码数量\r\n\t\t\t\t\tx5: 0,\r\n\t\t\t\t\t//请求总用时\r\n\t\t\t\t\ttimeSum: 0,\r\n\t\t\t\t\t//最低请求时间\r\n\t\t\t\t\tmin: 0,\r\n\t\t\t\t\t//最高请求用时\r\n\t\t\t\t\tmax: 0\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t//服务器的最大内存\r\n\t\t\tserverMaxMemory: 0,\r\n\t\t\t//服务器的可用内存\r\n\t\t\tserverTotalMemory: 0,\r\n\t\t\t//服务器的剩余内存\r\n\t\t\tserverFreeMemory: 0\r\n\t\t};\r\n\t},\r\n\tmethods: {\r\n\t\tisShowStatistics() {\r\n\t\t\t//是否显示请求数量统计信息\r\n\t\t\tif (this.requestData.count > 0 && this.requestData.average > 0 && this.requestData.interval > 0) {\r\n\t\t\t\tthis.isStatistics = true;\r\n\t\t\t\tthis.statisticsInfo = this.$t('statisticsInfo')\r\n\t\t\t\t\t.replace('{interval}', this.requestData.interval)\r\n\t\t\t\t\t.replace('{average}', this.requestData.average)\r\n\t\t\t\t\t.replace('{count}', this.requestData.count)\r\n\t\t\t\t\t.replace('{sum}', this.requestData.count * this.requestData.average)\r\n\t\t\t\t\t.replace('{time}', (this.requestData.count * this.requestData.interval) / 1000);\r\n\t\t\t} else {\r\n\t\t\t\tthis.isStatistics = false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tremoveHeader(item) {\r\n\t\t\t//删除header\r\n\t\t\tthis.$confirm('确认关闭？')\r\n\t\t\t\t.then(res => {\r\n\t\t\t\t\tvar index = this.requestData.headers.indexOf(item);\r\n\t\t\t\t\tif (index !== -1) {\r\n\t\t\t\t\t\tthis.headers.splice(index, 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch(err => {});\r\n\t\t},\r\n\t\taddHeader() {\r\n\t\t\t//添加header\r\n\t\t\tthis.headers.push({\r\n\t\t\t\tkey: '',\r\n\t\t\t\tvalue: ''\r\n\t\t\t});\r\n\t\t},\r\n\t\tlenByteToKB(len) {\r\n\t\t\t//将字节转换为千字节\r\n\t\t\tif (len == 0) {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\tvar result = len / 1024;\r\n\t\t\tif (result.toString().indexOf('.') != -1) {\r\n\t\t\t\treturn result.toFixed(4);\r\n\t\t\t} else {\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetResponseBatch(index) {\r\n\t\t\t//获取第几批次的提示文字\r\n\t\t\treturn this.$t('responseBatch').replace('{batch}', index + 1);\r\n\t\t},\r\n\t\tgetResponseBatchAvg(item) {\r\n\t\t\t//获取第几批次中的请求平均值\r\n\t\t\tif (item.timeSum == 0 || item.succeeded + item.failed == 0) {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\tvar result = item.timeSum / (item.succeeded + item.failed);\r\n\t\t\tif (result.toString().indexOf('.') != -1) {\r\n\t\t\t\treturn result.toFixed(3);\r\n\t\t\t} else {\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t},\r\n\t\texecute() {\r\n\t\t\tthis.$refs.requestTable.validate(valid => {\r\n\t\t\t\tif (valid) {\r\n\t\t\t\t\t//开始执行\r\n\t\t\t\t\tthis.isExecuting = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\texecuteCancel() {\r\n\t\t\t//取消执行\r\n\t\t\tthis.isExecuting = false;\r\n\t\t}\r\n\t},\r\n\twatch: {\r\n\t\t'requestData.url'(val) {\r\n\t\t\tif (val.indexOf('https://') != -1 && this.requestData.requestType == 'HTTP') {\r\n\t\t\t\tthis.requestData.isSSL = true;\r\n\t\t\t} else if (val.indexOf('wss://') != -1 && this.requestData.requestType == 'WebSocket') {\r\n\t\t\t\tthis.requestData.isSSL = true;\r\n\t\t\t} else if (this.requestData.requestType != 'TCP') {\r\n\t\t\t\tthis.requestData.isSSL = false;\r\n\t\t\t}\r\n\t\t},\r\n\t\t'requestData.requestType'() {\r\n\t\t\tif (this.requestData.url.indexOf('https://') != -1 && this.requestData.requestType == 'HTTP') {\r\n\t\t\t\tthis.requestData.isSSL = true;\r\n\t\t\t} else if (this.requestData.url.indexOf('wss://') != -1 && this.requestData.requestType == 'WebSocket') {\r\n\t\t\t\tthis.requestData.isSSL = true;\r\n\t\t\t} else if (this.requestData.requestType != 'TCP') {\r\n\t\t\t\tthis.requestData.isSSL = false;\r\n\t\t\t}\r\n\t\t},\r\n\t\t'requestData.count'() {\r\n\t\t\tthis.isShowStatistics();\r\n\t\t},\r\n\t\t'requestData.average'() {\r\n\t\t\tthis.isShowStatistics();\r\n\t\t},\r\n\t\t'requestData.interval'() {\r\n\t\t\tthis.isShowStatistics();\r\n\t\t}\r\n\t},\r\n\tcomputed: {\r\n\t\twatchResponseHeaderColor() {\r\n\t\t\t// 获取响应状态\r\n\t\t\tif (this.responseSucceeded > this.responseFailed) {\r\n\t\t\t\treturn 'background-color:#e8f6f0;';\r\n\t\t\t} else if (this.responseSucceeded < this.responseFailed) {\r\n\t\t\t\treturn 'background-color:#fae7e7;';\r\n\t\t\t} else {\r\n\t\t\t\treturn '';\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetResponseSucceededAvg() {\r\n\t\t\t//获取请求成功的平均用时\r\n\t\t\tif (this.responseSucceededTimeSum == 0 || this.responseSucceeded == 0) {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\tvar result = this.responseSucceededTimeSum / this.responseSucceeded;\r\n\t\t\tif (result.toString().indexOf('.') != -1) {\r\n\t\t\t\treturn result.toFixed(3);\r\n\t\t\t} else {\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetResponseFailedAvg() {\r\n\t\t\t//获取请求失败的平均用时\r\n\t\t\tif (this.responseFailedTimeSum == 0 || this.responseFailed == 0) {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\tvar result = this.responseFailedTimeSum / this.responseFailed;\r\n\t\t\tif (result.toString().indexOf('.') != -1) {\r\n\t\t\t\treturn result.toFixed(3);\r\n\t\t\t} else {\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"App.vue","sourceRoot":"src","sourcesContent":["<template>\r\n\t<el-container id=\"app\">\r\n\t\t<!-- 手机导航栏 -->\r\n\t\t<div id=\"mobile-bar\">\r\n\t\t\t<img src=\"./assets/logo.png\" alt=\"\" class=\"menu-button\" />\r\n\t\t\t<div class=\"logo\"><a href=\"/\">WebSocket-Stress-Tester</a></div>\r\n\t\t</div>\r\n\t\t<!-- 电脑导航栏 -->\r\n\t\t<el-header id=\"pc-bar\">\r\n\t\t\t<a id=\"logo\" href=\"/\">\r\n\t\t\t\t<img src=\"./assets/logo.png\" alt=\"\" />\r\n\t\t\t\t<span>WebSocket-Stress-Tester</span>\r\n\t\t\t</a>\r\n\t\t</el-header>\r\n\r\n\t\t<el-container>\r\n\t\t\t<!-- 中心栏 -->\r\n\t\t\t<el-main id=\"main\">\r\n\t\t\t\t<el-form :model=\"requestData\" label-width=\"120px\" label-position=\"right\" ref=\"requestTable\">\r\n\t\t\t\t\t<!-- 请求类型选择 -->\r\n\t\t\t\t\t<el-form-item :label=\"$t('requestType')\">\r\n\t\t\t\t\t\t<el-radio-group v-model=\"requestData.requestType\" :placeholder=\"$t('select')\">\r\n\t\t\t\t\t\t\t<el-radio label=\"HTTP\">HTTP / HTTPS</el-radio>\r\n\t\t\t\t\t\t\t<el-radio label=\"WebSocket\"></el-radio>\r\n\t\t\t\t\t\t\t<el-radio label=\"TCP\"></el-radio>\r\n\t\t\t\t\t\t</el-radio-group>\r\n\t\t\t\t\t</el-form-item>\r\n\t\t\t\t\t<!-- HTTP相关 -->\r\n\t\t\t\t\t<el-form-item\r\n\t\t\t\t\t\tv-if=\"requestData.requestType == 'HTTP'\"\r\n\t\t\t\t\t\t:label=\"$t('requestUrl')\"\r\n\t\t\t\t\t\tprop=\"url\"\r\n\t\t\t\t\t\t:rules=\"[{ required: true, message: $t('requestTips') }, { pattern: /^(http|https):\\/\\/.+$/, message: $t('httpUrlInvalidTips') }]\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<el-input :placeholder=\"$t('httpUrlPlaceholder')\" v-model=\"requestData.url\">\r\n\t\t\t\t\t\t\t<el-select v-model=\"requestData.method\" slot=\"prepend\" placeholder=\"请选择\" style=\"width: 6rem;color: #222;\">\r\n\t\t\t\t\t\t\t\t<el-option value=\"GET\">GET</el-option>\r\n\t\t\t\t\t\t\t\t<el-option value=\"POST\">POST</el-option>\r\n\t\t\t\t\t\t\t\t<el-option value=\"OPTIONS\">OPTIONS</el-option>\r\n\t\t\t\t\t\t\t\t<el-option value=\"HEAD\">HEAD</el-option>\r\n\t\t\t\t\t\t\t\t<el-option value=\"PUT\">PUT</el-option>\r\n\t\t\t\t\t\t\t\t<el-option value=\"DELETE\">DELETE</el-option>\r\n\t\t\t\t\t\t\t\t<el-option value=\"TRACE\">TRACE</el-option>\r\n\t\t\t\t\t\t\t\t<el-option value=\"CONNECT\">CONNECT</el-option>\r\n\t\t\t\t\t\t\t\t<el-option value=\"PATCH\">PATCH</el-option>\r\n\t\t\t\t\t\t\t\t<el-option value=\"OTHER\">OTHER</el-option>\r\n\t\t\t\t\t\t\t</el-select>\r\n\t\t\t\t\t\t</el-input>\r\n\t\t\t\t\t</el-form-item>\r\n\t\t\t\t\t<!-- WebSocket相关 -->\r\n\t\t\t\t\t<el-form-item\r\n\t\t\t\t\t\tv-if=\"requestData.requestType == 'WebSocket'\"\r\n\t\t\t\t\t\t:label=\"$t('requestUrl')\"\r\n\t\t\t\t\t\tprop=\"url\"\r\n\t\t\t\t\t\t:rules=\"[{ required: true, message: $t('requestTips') }, { pattern: /^(ws|wss):\\/\\/.+$/, message: $t('websocketUrlInvalidTips') }]\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<el-input :placeholder=\"$t('websocketUrlPlaceholder')\" v-model=\"requestData.url\"></el-input>\r\n\t\t\t\t\t</el-form-item>\r\n\t\t\t\t\t<!-- TCP相关 -->\r\n\t\t\t\t\t<el-form-item v-if=\"requestData.requestType == 'TCP'\" :label=\"$t('requestUrl')\" prop=\"url\" :rules=\"[{ required: true, message: $t('requestTips') }]\" required>\r\n\t\t\t\t\t\t<el-input :placeholder=\"$t('tcpPlaceholder')\" v-model=\"requestData.url\"><el-checkbox v-model=\"requestData.isSSL\" slot=\"prepend\">SSL</el-checkbox></el-input>\r\n\t\t\t\t\t</el-form-item>\r\n\t\t\t\t\t<!-- 证书选择 -->\r\n\t\t\t\t\t<el-form-item :label=\"$t('certSetting')\" v-if=\"requestData.isSSL\">\r\n\t\t\t\t\t\t<el-col :span=\"24\">\r\n\t\t\t\t\t\t\t<el-radio-group v-model=\"requestData.cert\">\r\n\t\t\t\t\t\t\t\t<el-radio label=\"DEFAULT\">{{ $t('certDefault') }}</el-radio>\r\n\t\t\t\t\t\t\t\t<el-radio label=\"PFX\">{{ $t('certPfx') }}</el-radio>\r\n\t\t\t\t\t\t\t\t<el-radio label=\"PEM\">{{ $t('certPem') }}</el-radio>\r\n\t\t\t\t\t\t\t</el-radio-group>\r\n\t\t\t\t\t\t</el-col>\r\n\t\t\t\t\t\t<el-col :span=\"24\" v-if=\"requestData.cert == 'PFX' || requestData.cert == 'PEM'\">\r\n\t\t\t\t\t\t\t<el-input type=\"textarea\" :placeholder=\"$t('certKey')\" v-model=\"requestData.certKey\"></el-input>\r\n\t\t\t\t\t\t</el-col>\r\n\t\t\t\t\t\t<el-col :span=\"24\" v-if=\"requestData.cert == 'PFX' || requestData.cert == 'PEM'\">\r\n\t\t\t\t\t\t\t<el-input type=\"textarea\" :placeholder=\"$t('certValue')\" v-model=\"requestData.certValue\"></el-input>\r\n\t\t\t\t\t\t</el-col>\r\n\t\t\t\t\t</el-form-item>\r\n\t\t\t\t\t<!-- 请求的Header内容 -->\r\n\t\t\t\t\t<el-form-item :label=\"$t('requestHeaders')\" v-if=\"requestData.requestType == 'HTTP' || requestData.requestType == 'WebSocket'\">\r\n\t\t\t\t\t\t<el-col :span=\"24\">\r\n\t\t\t\t\t\t\t<el-form-item v-for=\"(item, index) in requestData.headers\" :key=\"index\">\r\n\t\t\t\t\t\t\t\t<el-col :xs=\"24\" :sm=\"10\"><el-input v-model=\"item.key\" :placeholder=\"$t('headerKey')\"></el-input></el-col>\r\n\t\t\t\t\t\t\t\t<el-col :xs=\"0\" :sm=\"1\">&nbsp;</el-col>\r\n\t\t\t\t\t\t\t\t<el-col :xs=\"20\" :sm=\"10\"><el-input v-model=\"item.value\" :placeholder=\"$t('headerValue')\"></el-input></el-col>\r\n\t\t\t\t\t\t\t\t<el-col :xs=\"1\" :sm=\"1\">&nbsp;</el-col>\r\n\t\t\t\t\t\t\t\t<el-col :xs=\"3\" :sm=\"2\">\r\n\t\t\t\t\t\t\t\t\t<el-button @click.prevent=\"removeHeader(item)\" size=\"small\" type=\"danger\">{{ $t('btnRemove') }}</el-button>\r\n\t\t\t\t\t\t\t\t</el-col>\r\n\t\t\t\t\t\t\t</el-form-item>\r\n\t\t\t\t\t\t</el-col>\r\n\t\t\t\t\t\t<el-col :span=\"24\">\r\n\t\t\t\t\t\t\t<el-button type=\"primary\" size=\"small\" @click=\"addHeader\">{{ $t('btnAdd') }}</el-button>\r\n\t\t\t\t\t\t</el-col>\r\n\t\t\t\t\t</el-form-item>\r\n\t\t\t\t\t<!-- 请求的body内容 -->\r\n\t\t\t\t\t<el-form-item :label=\"$t('requestBody')\"><el-input type=\"textarea\" :placeholder=\"$t('requestBodyPlaceholder')\" v-model=\"requestData.body\"></el-input></el-form-item>\r\n\t\t\t\t\t<!-- 请求统计信息 -->\r\n\t\t\t\t\t<el-form-item :label=\"$t('requestCount')\" required>\r\n\t\t\t\t\t\t<el-col :xs=\"24\" :sm=\"6\">\r\n\t\t\t\t\t\t\t<el-form-item prop=\"count\" :rules=\"[{ required: true, type: 'number', min: 0, message: $t('requestCountTips') }]\" required>\r\n\t\t\t\t\t\t\t\t<el-input :placeholder=\"$t('requestCountPlaceholder')\" v-model.number=\"requestData.count\"></el-input>\r\n\t\t\t\t\t\t\t</el-form-item>\r\n\t\t\t\t\t\t</el-col>\r\n\t\t\t\t\t\t<el-col :sm=\"1\">&nbsp;</el-col>\r\n\t\t\t\t\t\t<el-col :xs=\"24\" :sm=\"8\">\r\n\t\t\t\t\t\t\t<el-form-item prop=\"average\" :rules=\"[{ required: true, type: 'number', min: 0, message: $t('requestAverageTips') }]\" required>\r\n\t\t\t\t\t\t\t\t<el-input :placeholder=\"$t('requestAveragePlaceholder')\" v-model.number=\"requestData.average\"></el-input>\r\n\t\t\t\t\t\t\t</el-form-item>\r\n\t\t\t\t\t\t</el-col>\r\n\t\t\t\t\t\t<el-col :sm=\"1\">&nbsp;</el-col>\r\n\t\t\t\t\t\t<el-col :xs=\"24\" :sm=\"8\">\r\n\t\t\t\t\t\t\t<el-form-item prop=\"interval\" :rules=\"[{ required: true, type: 'number', min: 1, message: $t('requestIntervalTips') }]\" required>\r\n\t\t\t\t\t\t\t\t<el-input :placeholder=\"$t('requestIntervalPlaceholder')\" v-model.number=\"requestData.interval\"></el-input>\r\n\t\t\t\t\t\t\t</el-form-item>\r\n\t\t\t\t\t\t</el-col>\r\n\t\t\t\t\t</el-form-item>\r\n\t\t\t\t\t<el-form-item v-show=\"requestData.isStatistics\" :label=\"$t('statistics')\">{{ requestData.statisticsInfo }}</el-form-item>\r\n\t\t\t\t\t<el-form-item>\r\n\t\t\t\t\t\t<el-button type=\"primary\" :loading=\"isExecuting\" @click=\"execute\">{{ isExecuting ? $t('btnIsExecute') : $t('btnExecute') }}</el-button>\r\n\t\t\t\t\t\t<el-button v-show=\"isExecuting\" @click=\"executeCancel\">{{ $t('btnCancel') }}</el-button>\r\n\t\t\t\t\t</el-form-item>\r\n\t\t\t\t</el-form>\r\n\t\t\t\t<div v-show=\"isExecuted\">\r\n\t\t\t\t\t<div id=\"response-heander\" :style=\"watchResponseHeaderColor\">\r\n\t\t\t\t\t\t<!-- 成功的统计信息 -->\r\n\t\t\t\t\t\t<div class=\"response-header-box\">\r\n\t\t\t\t\t\t\t<div class=\"response-header-label\">\r\n\t\t\t\t\t\t\t\t<b>{{ $t('responseSucceededCount') }}</b>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"response-header-body\">\r\n\t\t\t\t\t\t\t\t<div style=\"color: #28a745;font-size: 36px;\">{{ responseSucceeded }}</div>\r\n\t\t\t\t\t\t\t\t<div style=\"display: flex;flex-wrap: wrap;\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"small\">{{ $t('responseAvgTime') }}:{{ getResponseSucceededAvg }}ms</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"small\">{{ $t('responseMinTime') }}:{{ responseSucceededMin }}ms</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"small\">{{ $t('responseMaxTime') }}:{{ responseSucceededMax }}ms</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<!-- 失败的统计信息 -->\r\n\t\t\t\t\t\t<div class=\"response-header-box\">\r\n\t\t\t\t\t\t\t<div class=\"response-header-label\">\r\n\t\t\t\t\t\t\t\t<b>{{ $t('responseFailedCount') }}</b>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"response-header-body\">\r\n\t\t\t\t\t\t\t\t<div style=\"color: #dc3545;font-size: 36px;\">{{ responseFailed }}</div>\r\n\t\t\t\t\t\t\t\t<div style=\"display: flex;flex-wrap: wrap;\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"small\">4xx:{{ responseFailed4xx }}</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"small\">5xx:{{ responseFailed5xx }}</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"small\">{{ $t('responseAvgTime') }}:{{ getResponseFailedAvg }}ms</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"small\">{{ $t('responseMinTime') }}:{{ responseFailedMin }}ms</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"small\">{{ $t('responseMaxTime') }}:{{ responseFailedMax }}ms</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<!-- 数据信息 -->\r\n\t\t\t\t\t\t<div class=\"response-header-box\" v-show=\"requestDataLen != 0 || responseDataLen != 0\">\r\n\t\t\t\t\t\t\t<div class=\"response-header-label\">\r\n\t\t\t\t\t\t\t\t<b>{{ $t('dataLenInfo') }}</b>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"response-header-body\">\r\n\t\t\t\t\t\t\t\t<div style=\"display: flex;flex-wrap: wrap;\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"small sm-margin-left-0x\">{{ $t('requestDataLen') }}:{{ lenByteToKB(requestDataLen) }}kb</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"small\">{{ $t('responseDataLen') }}:{{ lenByteToKB(responseDataLen) }}kb</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<!-- 服务器内存 -->\r\n\t\t\t\t\t\t<div class=\"response-header-box\" v-show=\"serverMaxMemory != 0\">\r\n\t\t\t\t\t\t\t<div class=\"response-header-label\">\r\n\t\t\t\t\t\t\t\t<b>{{ $t('serverMemory') }}</b>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"response-header-body\">\r\n\t\t\t\t\t\t\t\t<div style=\"display: flex;flex-wrap: wrap;\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"small sm-margin-left-0x\">{{ $t('serverMaxMemory') }}:{{ serverMaxMemory }}m</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"small\">{{ $t('serverTotalMemory') }}:{{ serverTotalMemory }}m</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"small\">{{ $t('serverFreeMemory') }}:{{ serverFreeMemory }}m</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<!-- 每一次请求统计信息 -->\r\n\t\t\t\t\t\t<div class=\"response-header-box\" v-for=\"(item, index) in responseStatistics\" :key=\"index\" v-show=\"item.succeeded != 0 || item.failed != 0\">\r\n\t\t\t\t\t\t\t<div class=\"response-header-label\">\r\n\t\t\t\t\t\t\t\t<b>{{ getResponseBatch(index) }}</b>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"response-header-body\">\r\n\t\t\t\t\t\t\t\t<div style=\"display: flex;flex-wrap: wrap;\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"small sm-margin-left-0x\" style=\"color: #28a745;\">{{ $t('succee') }}:{{ item.succeeded }}</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"small\" style=\"color: #dc3545;\">{{ $t('fail') }}:{{ item.failed }}</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"small\">2xx:{{ item.x2 }}</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"small\">4xx:{{ item.x4 }}</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"small\">5xx:{{ item.x5 }}</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"small\">{{ $t('responseAvgTime') }}:{{ getResponseBatchAvg(item) }}ms</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"small\">{{ $t('responseMinTime') }}:{{ responseFailedMin }}ms</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"small\">{{ $t('responseMaxTime') }}:{{ responseFailedMax }}ms</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<!-- 请求响应时间折线表 -->\r\n\t\t\t\t\t<div :style=\"watchResponseHeaderColor\"><ChartLine></ChartLine></div>\r\n\t\t\t\t\t<div id=\"response-body\"><p>123456</p></div>\r\n\t\t\t\t</div>\r\n\t\t\t</el-main>\r\n\t\t</el-container>\r\n\t</el-container>\r\n</template>\r\n\r\n<script>\r\nimport ChartLine from './components/EchartsLive.vue';\r\nexport default {\r\n\tname: 'Orion-Stress-Tester',\r\n\tcomponents: { ChartLine },\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\t// 是否显示请求统计信息\r\n\t\t\tisStatistics: false,\r\n\t\t\t//请求统计的信息\r\n\t\t\tstatisticsInfo: '',\r\n\t\t\t//是否正在执行中\r\n\t\t\tisExecuting: false,\r\n\t\t\t//是否已经执行过\r\n\t\t\tisExecuted: true,\r\n\t\t\t//请求的数据\r\n\t\t\trequestData: {\r\n\t\t\t\t//请求的类型\r\n\t\t\t\trequestType: 'HTTP',\r\n\t\t\t\t//是否使用SSL\r\n\t\t\t\tisSSL: false,\r\n\t\t\t\t//证书的类型\r\n\t\t\t\tcert: 'DEFAULT',\r\n\t\t\t\t//证书的key\r\n\t\t\t\tcertKey: '',\r\n\t\t\t\t//证书的value\r\n\t\t\t\tcertValue: '',\r\n\t\t\t\t//http请求的类型\r\n\t\t\t\tmethod: 'GET',\r\n\t\t\t\t//请求的header数据\r\n\t\t\t\theaders: [],\r\n\t\t\t\t//请求的url\r\n\t\t\t\turl: '',\r\n\t\t\t\t//请求的body\r\n\t\t\t\tbody: '',\r\n\t\t\t\t//请求的总次数\r\n\t\t\t\tcount: null,\r\n\t\t\t\t//每次请求多数次\r\n\t\t\t\taverage: null,\r\n\t\t\t\t//请求的间隔\r\n\t\t\t\tinterval: null\r\n\t\t\t},\r\n\t\t\t//请求数据长度\r\n\t\t\trequestDataLen: 0,\r\n\t\t\t//请求响应数据长度\r\n\t\t\tresponseDataLen: 0,\r\n\r\n\t\t\t//请求成功的数量\r\n\t\t\tresponseSucceeded: 0,\r\n\t\t\t//请求成功的时间平均值\r\n\t\t\tresponseSucceededTimeSum: 0,\r\n\t\t\t//请求成功最小用时\r\n\t\t\tresponseSucceededMin: 0,\r\n\t\t\t//请求成功最大用时\r\n\t\t\tresponseSucceededMax: 0,\r\n\r\n\t\t\t//请求失败的数量\r\n\t\t\tresponseFailed: 0,\r\n\t\t\t//请求失败,响应以4开头的状态码数量\r\n\t\t\tresponseFailed4xx: 0,\r\n\t\t\t//请求失败,响应以5开头的状态码数量\r\n\t\t\tresponseFailed5xx: 0,\r\n\t\t\t//请求失败的时间平均值\r\n\t\t\tresponseFailedTimeSum: 0,\r\n\t\t\t//请求失败最小用时\r\n\t\t\tresponseFailedMin: 0,\r\n\t\t\t//请求失败最大用时\r\n\t\t\tresponseFailedMax: 0,\r\n\r\n\t\t\t//不同批次的请求统计信息,该数据在执行之前先按count次数添加数组\r\n\t\t\tresponseStatistics: [\r\n\t\t\t\t{\r\n\t\t\t\t\t//成功的数量\r\n\t\t\t\t\tsucceeded: 0,\r\n\t\t\t\t\t//失败的数量\r\n\t\t\t\t\tfailed: 0,\r\n\t\t\t\t\t//2xx状态码数量\r\n\t\t\t\t\tx2: 0,\r\n\t\t\t\t\t//400状态码数量\r\n\t\t\t\t\tx4: 0,\r\n\t\t\t\t\t//5xx状态码数量\r\n\t\t\t\t\tx5: 0,\r\n\t\t\t\t\t//请求总用时\r\n\t\t\t\t\ttimeSum: 0,\r\n\t\t\t\t\t//最低请求时间\r\n\t\t\t\t\tmin: 0,\r\n\t\t\t\t\t//最高请求用时\r\n\t\t\t\t\tmax: 0\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t//服务器的最大内存\r\n\t\t\tserverMaxMemory: 0,\r\n\t\t\t//服务器的可用内存\r\n\t\t\tserverTotalMemory: 0,\r\n\t\t\t//服务器的剩余内存\r\n\t\t\tserverFreeMemory: 0\r\n\t\t};\r\n\t},\r\n\tmethods: {\r\n\t\tisShowStatistics() {\r\n\t\t\t//是否显示请求数量统计信息\r\n\t\t\tif (this.requestData.count > 0 && this.requestData.average > 0 && this.requestData.interval > 0) {\r\n\t\t\t\tthis.isStatistics = true;\r\n\t\t\t\tthis.statisticsInfo = this.$t('statisticsInfo')\r\n\t\t\t\t\t.replace('{interval}', this.requestData.interval)\r\n\t\t\t\t\t.replace('{average}', this.requestData.average)\r\n\t\t\t\t\t.replace('{count}', this.requestData.count)\r\n\t\t\t\t\t.replace('{sum}', this.requestData.count * this.requestData.average)\r\n\t\t\t\t\t.replace('{time}', (this.requestData.count * this.requestData.interval) / 1000);\r\n\t\t\t} else {\r\n\t\t\t\tthis.isStatistics = false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tremoveHeader(item) {\r\n\t\t\t//删除header\r\n\t\t\tthis.$confirm('确认关闭？')\r\n\t\t\t\t.then(res => {\r\n\t\t\t\t\tvar index = this.requestData.headers.indexOf(item);\r\n\t\t\t\t\tif (index !== -1) {\r\n\t\t\t\t\t\tthis.headers.splice(index, 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch(err => {});\r\n\t\t},\r\n\t\taddHeader() {\r\n\t\t\t//添加header\r\n\t\t\tthis.headers.push({\r\n\t\t\t\tkey: '',\r\n\t\t\t\tvalue: ''\r\n\t\t\t});\r\n\t\t},\r\n\t\tlenByteToKB(len) {\r\n\t\t\t//将字节转换为千字节\r\n\t\t\tif (len == 0) {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\tvar result = len / 1024;\r\n\t\t\tif (result.toString().indexOf('.') != -1) {\r\n\t\t\t\treturn result.toFixed(4);\r\n\t\t\t} else {\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetResponseBatch(index) {\r\n\t\t\t//获取第几批次的提示文字\r\n\t\t\treturn this.$t('responseBatch').replace('{batch}', index + 1);\r\n\t\t},\r\n\t\tgetResponseBatchAvg(item) {\r\n\t\t\t//获取第几批次中的请求平均值\r\n\t\t\tif (item.timeSum == 0 || item.succeeded + item.failed == 0) {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\tvar result = item.timeSum / (item.succeeded + item.failed);\r\n\t\t\tif (result.toString().indexOf('.') != -1) {\r\n\t\t\t\treturn result.toFixed(3);\r\n\t\t\t} else {\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t},\r\n\t\texecute() {\r\n\t\t\tthis.$refs.requestTable.validate(valid => {\r\n\t\t\t\tif (valid) {\r\n\t\t\t\t\t//开始执行\r\n\t\t\t\t\tthis.isExecuting = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\texecuteCancel() {\r\n\t\t\t//取消执行\r\n\t\t\tthis.isExecuting = false;\r\n\t\t}\r\n\t},\r\n\twatch: {\r\n\t\t'requestData.url'(val) {\r\n\t\t\tif (val.indexOf('https://') != -1 && this.requestData.requestType == 'HTTP') {\r\n\t\t\t\tthis.requestData.isSSL = true;\r\n\t\t\t} else if (val.indexOf('wss://') != -1 && this.requestData.requestType == 'WebSocket') {\r\n\t\t\t\tthis.requestData.isSSL = true;\r\n\t\t\t} else if (this.requestData.requestType != 'TCP') {\r\n\t\t\t\tthis.requestData.isSSL = false;\r\n\t\t\t}\r\n\t\t},\r\n\t\t'requestData.requestType'() {\r\n\t\t\tif (this.requestData.url.indexOf('https://') != -1 && this.requestData.requestType == 'HTTP') {\r\n\t\t\t\tthis.requestData.isSSL = true;\r\n\t\t\t} else if (this.requestData.url.indexOf('wss://') != -1 && this.requestData.requestType == 'WebSocket') {\r\n\t\t\t\tthis.requestData.isSSL = true;\r\n\t\t\t} else if (this.requestData.requestType != 'TCP') {\r\n\t\t\t\tthis.requestData.isSSL = false;\r\n\t\t\t}\r\n\t\t},\r\n\t\t'requestData.count'() {\r\n\t\t\tthis.isShowStatistics();\r\n\t\t},\r\n\t\t'requestData.average'() {\r\n\t\t\tthis.isShowStatistics();\r\n\t\t},\r\n\t\t'requestData.interval'() {\r\n\t\t\tthis.isShowStatistics();\r\n\t\t}\r\n\t},\r\n\tcomputed: {\r\n\t\twatchResponseHeaderColor() {\r\n\t\t\t// 获取响应状态\r\n\t\t\tif (this.responseSucceeded > this.responseFailed) {\r\n\t\t\t\treturn 'background-color:#e8f6f0;';\r\n\t\t\t} else if (this.responseSucceeded < this.responseFailed) {\r\n\t\t\t\treturn 'background-color:#fae7e7;';\r\n\t\t\t} else {\r\n\t\t\t\treturn '';\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetResponseSucceededAvg() {\r\n\t\t\t//获取请求成功的平均用时\r\n\t\t\tif (this.responseSucceededTimeSum == 0 || this.responseSucceeded == 0) {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\tvar result = this.responseSucceededTimeSum / this.responseSucceeded;\r\n\t\t\tif (result.toString().indexOf('.') != -1) {\r\n\t\t\t\treturn result.toFixed(3);\r\n\t\t\t} else {\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetResponseFailedAvg() {\r\n\t\t\t//获取请求失败的平均用时\r\n\t\t\tif (this.responseFailedTimeSum == 0 || this.responseFailed == 0) {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\tvar result = this.responseFailedTimeSum / this.responseFailed;\r\n\t\t\tif (result.toString().indexOf('.') != -1) {\r\n\t\t\t\treturn result.toFixed(3);\r\n\t\t\t} else {\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n</script>\r\n\r\n<style>\r\n/* 修改框架样式 */\r\n.el-input__inner::placeholder {\r\n\tcolor: #555 !important;\r\n}\r\n\r\n.el-textarea__inner::placeholder {\r\n\tcolor: #555 !important;\r\n}\r\n\r\n/* 通用样式 */\r\na {\r\n\ttext-decoration: none;\r\n\tcolor: #304455;\r\n}\r\nimg {\r\n\tborder: none;\r\n}\r\n.sm-margin-left-0x {\r\n\tmargin-left: 0 !important;\r\n}\r\n\r\n@media screen and (max-width: 768px) {\r\n\t#mobile-bar {\r\n\t\tdisplay: block !important;\r\n\t}\r\n\t#pc-bar {\r\n\t\tdisplay: none !important;\r\n\t}\r\n\t#aside {\r\n\t\tpadding-top: 40px !important;\r\n\t\twidth: 100% !important;\r\n\t}\r\n\t#main {\r\n\t\tpadding-top: 60px !important;\r\n\t}\r\n\t#response-heander .response-header-label {\r\n\t\twidth: 100% !important;\r\n\t\ttext-align: left !important;\r\n\t\tjustify-content: left !important;\r\n\t}\r\n\t.sm-margin-left-0x {\r\n\t\tmargin-left: 0.6rem !important;\r\n\t}\r\n}\r\n\r\n/* 手机导航栏 */\r\n#mobile-bar {\r\n\tposition: fixed;\r\n\tdisplay: none;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 40px;\r\n\tbackground-color: #fff;\r\n\tz-index: 20;\r\n\tbox-shadow: 0 0 2px rgba(0, 0, 0, 0.25);\r\n}\r\n#mobile-bar .menu-button {\r\n\tposition: absolute;\r\n\ttop: 8px;\r\n\tleft: 12px;\r\n\theight: 25px;\r\n\twidth: 25px;\r\n\tz-index: 2;\r\n}\r\n\r\n#mobile-bar .logo {\r\n\tposition: absolute;\r\n\ttop: 10px;\r\n\ttext-align: center;\r\n\twidth: 100%;\r\n}\r\n\r\n/* 电脑导航栏 */\r\n#pc-bar {\r\n\tposition: fixed;\r\n\twidth: 100%;\r\n\ttop: 0;\r\n\twidth: 100%;\r\n\tbox-shadow: 0 0 1px rgba(0, 0, 0, 0.25);\r\n\ttransition: background-color 0.3s ease-in-out;\r\n\tbackground-color: #fff;\r\n\theight: 40px;\r\n\tpadding: 10px 60px;\r\n\tz-index: 10;\r\n}\r\n#logo {\r\n\tdisplay: inline-block;\r\n\tfont-size: 1.5em;\r\n\tline-height: 40px;\r\n\tcolor: #273849;\r\n\tfont-family: 'Dosis', 'Source Sans Pro', 'Helvetica Neue', Arial, sans-serif;\r\n\tfont-weight: 500;\r\n}\r\n#logo img {\r\n\tvertical-align: middle;\r\n\tmargin-right: 6px;\r\n\twidth: 40px;\r\n\theight: 40px;\r\n}\r\n\r\n/* #nav {\n\tposition: fixed;\n}\n#nav {\n\tlist-style-type: none;\n\tmargin: 0;\n\tpadding: 0;\n\tposition: absolute;\n\tright: 30px;\n\ttop: 10px;\n\theight: 40px;\n\tline-height: 40px;\n}\n#nav li {\n\tdisplay: inline-block;\n\tposition: relative;\n\tmargin: 0 0.6em;\n\tcursor: pointer;\n}\n#nav li a:hover {\n\tpadding-bottom: 2px;\n\tborder-bottom: 2px solid #42b983;\n}\n */\r\n\r\n#main {\r\n\tcolor: #333;\r\n\tpadding-top: 80px;\r\n\tmax-width: 1024px;\r\n\tmargin-left: auto;\r\n\tmargin-right: auto;\r\n\tmargin-bottom: 10px;\r\n\tscrollbar-width: thin;\r\n}\r\n\r\n#response-heander {\r\n\tbackground-color: #f5f7fa;\r\n\tborder-radius: 5px 5px 0 0;\r\n\tpadding: 10px 5px;\r\n}\r\n#response-heander .response-header-box {\r\n\tdisplay: flex;\r\n\tflex-wrap: wrap;\r\n}\r\n#response-heander .response-header-label {\r\n\twidth: 105px;\r\n\tmargin-right: 10px;\r\n\tdisplay: flex;\r\n\ttext-align: right;\r\n\tjustify-content: right;\r\n\talign-items: center;\r\n}\r\n#response-heander .response-header-body {\r\n\tdisplay: flex;\r\n\tflex-wrap: wrap;\r\n\tjustify-content: left;\r\n\talign-items: flex-end;\r\n}\r\n\r\n#response-heander .response-header-body .small {\r\n\tline-height: 34px;\r\n\tmargin-left: 0.6rem;\r\n}\r\n\r\n#response-body {\r\n\tbackground-color: #18181a;\r\n\tcolor: white;\r\n\tpadding: 5px;\r\n\tmax-height: 40vh;\r\n\tborder-radius: 0 0 5px 5px;\r\n\toverflow-y: auto;\r\n\tscrollbar-width: thin;\r\n}\r\n</style>\n"]}]}