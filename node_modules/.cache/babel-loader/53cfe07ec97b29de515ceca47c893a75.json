{"remainingRequest":"D:\\project\\vue\\WebSocket-Stress-Tester-Client\\node_modules\\babel-loader\\lib\\index.js!D:\\project\\vue\\WebSocket-Stress-Tester-Client\\src\\lang\\index.js","dependencies":[{"path":"D:\\project\\vue\\WebSocket-Stress-Tester-Client\\src\\lang\\index.js","mtime":1579412773336},{"path":"D:\\project\\vue\\WebSocket-Stress-Tester-Client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1580976810633},{"path":"D:\\project\\vue\\WebSocket-Stress-Tester-Client\\node_modules\\babel-loader\\lib\\index.js","mtime":1580976845122}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _objectSpread from \"D:\\\\project\\\\vue\\\\WebSocket-Stress-Tester-Client\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\nimport Vue from 'vue';\nimport VueI18n from 'vue-i18n';\nimport Cookies from 'js-cookie';\nimport elementEnLocale from 'element-ui/lib/locale/lang/en'; // element-ui lang\n\nimport elementZhLocale from 'element-ui/lib/locale/lang/zh-CN'; // element-ui lang\n\nimport enLocale from \"./en\";\nimport zhLocale from \"./zh\";\nVue.use(VueI18n);\nvar messages = {\n  en: _objectSpread({}, enLocale, elementEnLocale),\n  zh: _objectSpread({}, zhLocale, elementZhLocale)\n};\nexport function getLanguage() {\n  var chooseLanguage = Cookies.get('language');\n  if (chooseLanguage) return chooseLanguage; // if has not choose language\n\n  var language = (navigator.language || navigator.browserLanguage).toLowerCase();\n  var locales = Object.keys(messages);\n\n  for (var _i = 0, _locales = locales; _i < _locales.length; _i++) {\n    var locale = _locales[_i];\n\n    if (language.indexOf(locale) > -1) {\n      return locale;\n    }\n  }\n\n  return 'zh';\n}\nvar i18n = new VueI18n({\n  // set locale\n  // options: en | zh | es\n  locale: getLanguage(),\n  // locale: 'zh',\n  // set locale messages\n  messages: messages\n});\nexport default i18n;",{"version":3,"sources":["D:\\project\\vue\\WebSocket-Stress-Tester-Client\\src\\lang\\index.js"],"names":["Vue","VueI18n","Cookies","elementEnLocale","elementZhLocale","enLocale","zhLocale","use","messages","en","zh","getLanguage","chooseLanguage","get","language","navigator","browserLanguage","toLowerCase","locales","Object","keys","locale","indexOf","i18n"],"mappings":";;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,eAAP,MAA4B,+BAA5B,C,CAA4D;;AAC5D,OAAOC,eAAP,MAA4B,kCAA5B,C,CAA8D;;AAC9D,OAAOC,QAAP;AACA,OAAOC,QAAP;AAEAN,GAAG,CAACO,GAAJ,CAAQN,OAAR;AAEA,IAAMO,QAAQ,GAAG;AACfC,EAAAA,EAAE,oBACGJ,QADH,EAEGF,eAFH,CADa;AAKfO,EAAAA,EAAE,oBACGJ,QADH,EAEGF,eAFH;AALa,CAAjB;AAUA,OAAO,SAASO,WAAT,GAAuB;AAC5B,MAAMC,cAAc,GAAGV,OAAO,CAACW,GAAR,CAAY,UAAZ,CAAvB;AACA,MAAID,cAAJ,EAAoB,OAAOA,cAAP,CAFQ,CAI5B;;AACA,MAAME,QAAQ,GAAG,CAACC,SAAS,CAACD,QAAV,IAAsBC,SAAS,CAACC,eAAjC,EAAkDC,WAAlD,EAAjB;AACA,MAAMC,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAYZ,QAAZ,CAAhB;;AACA,8BAAqBU,OAArB,8BAA8B;AAAzB,QAAMG,MAAM,eAAZ;;AACH,QAAIP,QAAQ,CAACQ,OAAT,CAAiBD,MAAjB,IAA2B,CAAC,CAAhC,EAAmC;AACjC,aAAOA,MAAP;AACD;AACF;;AACD,SAAO,IAAP;AACD;AACD,IAAME,IAAI,GAAG,IAAItB,OAAJ,CAAY;AACvB;AACA;AACAoB,EAAAA,MAAM,EAAEV,WAAW,EAHI;AAIvB;AACA;AACAH,EAAAA,QAAQ,EAARA;AANuB,CAAZ,CAAb;AASA,eAAee,IAAf","sourcesContent":["import Vue from 'vue'\r\nimport VueI18n from 'vue-i18n'\r\nimport Cookies from 'js-cookie'\r\nimport elementEnLocale from 'element-ui/lib/locale/lang/en' // element-ui lang\r\nimport elementZhLocale from 'element-ui/lib/locale/lang/zh-CN'// element-ui lang\r\nimport enLocale from './en'\r\nimport zhLocale from './zh'\r\n\r\nVue.use(VueI18n)\r\n\r\nconst messages = {\r\n  en: {\r\n    ...enLocale,\r\n    ...elementEnLocale\r\n  },\r\n  zh: {\r\n    ...zhLocale,\r\n    ...elementZhLocale\r\n  }\r\n}\r\nexport function getLanguage() {\r\n  const chooseLanguage = Cookies.get('language')\r\n  if (chooseLanguage) return chooseLanguage\r\n\r\n  // if has not choose language\r\n  const language = (navigator.language || navigator.browserLanguage).toLowerCase()\r\n  const locales = Object.keys(messages)\r\n  for (const locale of locales) {\r\n    if (language.indexOf(locale) > -1) {\r\n      return locale\r\n    }\r\n  }\r\n  return 'zh'\r\n}\r\nconst i18n = new VueI18n({\r\n  // set locale\r\n  // options: en | zh | es\r\n  locale: getLanguage(),\r\n  // locale: 'zh',\r\n  // set locale messages\r\n  messages\r\n})\r\n\r\nexport default i18n\r\n"]}]}